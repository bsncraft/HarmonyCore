<CODEGEN_FILENAME><StructureNoplural>Loader.cs</CODEGEN_FILENAME>
<REQUIRES_CODEGEN_VERSION>5.4.6</REQUIRES_CODEGEN_VERSION>
<REQUIRES_OPTION>TF</REQUIRES_OPTION>
<CODEGEN_FOLDER>DataGenerators</CODEGEN_FOLDER>
<REQUIRES_USERTOKEN>MODELS_NAMESPACE</REQUIRES_USERTOKEN>
;//****************************************************************************
;//
;// Title:       ODataTestDataLoader.tpl
;//
;// Type:        CodeGen Template
;//
;// Description: Creates a class that loads sample data from a sequential file.
;//
;// Copyright (c) 2018, Synergex International, Inc. All rights reserved.
;//
;// Redistribution and use in source and binary forms, with or without
;// modification, are permitted provided that the following conditions are met:
;//
;// * Redistributions of source code must retain the above copyright notice,
;//   this list of conditions and the following disclaimer.
;//
;// * Redistributions in binary form must reproduce the above copyright notice,
;//   this list of conditions and the following disclaimer in the documentation
;//   and/or other materials provided with the distribution.
;//
;// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
;// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
;// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
;// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
;// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
;// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
;// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
;// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
;// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
;// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
;// POSSIBILITY OF SUCH DAMAGE.
;//
//*****************************************************************************
//
// Title:       <StructureNoplural>Loader.cs
//
// Description: Loads sample <structureNoplural> data from a sequential file.
//
//*****************************************************************************
// WARNING: GENERATED CODE!
// This file was generated by CodeGen. Avoid editing the file if possible.
// Any changes you make will be lost of the file is re-generated.
//*****************************************************************************

using Harmony.Core.FileIO;
using System;
using System.Collections.Generic;
using <MODELS_NAMESPACE>;

namespace <NAMESPACE>
{
    public static partial class <StructureNoplural>Loader
    {
        public static List<<StructureNoplural>> LoadFromFile()
        {
            const string dataFile = "<FILE_NAME>";
            var textFile = dataFile.ToLower().Replace(".ism", ".txt");
            var <structurePlural> = new List<<StructureNoplural>>();
            using var channelManager = new FileChannelManager();
            using var fileIO = new IsamDataObjectIO<<StructureNoplural>>(channelManager, textFile, FileOpenMode.InputSequential);
            if (fileIO.ReadFirstRecord(out <StructureNoplural> first<StructureNoplural>) != FileAccessResults.Success)
            {
                return <structurePlural>;
            }
            <structurePlural>.Add(first<StructureNoplural>);
            while (fileIO.ReadNextRecord(out <StructureNoplural> next<StructureNoplural>) == FileAccessResults.Success)
            {
                <structurePlural>.Add(next<StructureNoplural>);                
            }

            return <structurePlural>;
        }
    }
}
